@model SwimCreate;


@section scripts
    {
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
    <link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
          rel="stylesheet">
    <script type="text/javascript">
        $(function () {
            var poolLength = 25;
            var yards = true;
            var dialogTitle = "";
            var workoutId = "";

            $(".poollengthinput").on("change", function (event) {
                var parts = event.currentTarget.value.split(' ');
                poolLength = parseInt(parts[0]);
                if (poolLength === 33) {
                    poolLength = 33.33333;

                }

                yards = parts[1] == "Yards";
                UpdateYardage(true);
            });

            $("#print").click(function printSwimWorkout() {
                var headstr = "<html><head><title></title></head><body>";
                var footstr = "</body>";
                var newstr = document.all.item("swimout").innerHTML;
                console.log("%O", document.all.item("swimout"));
                console.log("%O", newstr.innerText);

                var oldstr = document.body.innerHTML;
                document.body.innerHTML = headstr + newstr + footstr;
                window.print();
                document.body.innerHTML = oldstr;
                return false;
            });
            $(".repsentry").on("change", function (event) {
                var val = event.currentTarget.value;
                var i = event.currentTarget.getAttribute("data-index");
                UpdateSet(i);
                UpdateYardage(false);
            });
            $(".distselect").change(function (event) {
                var value = event.currentTarget.value; //get the selected option value
                var index = event.currentTarget.getAttribute("data-index");
                if (value == "Other") {
                    $("#div_content" + index).css("display", "block"); //display the add new dialog
                } else {
                    UpdateSet(index);
                    UpdateYardage(false);
                }
            });
            $("#dialog-1").dialog({
                autoOpen: false
            });
            $(".btn.btn-primary").contextmenu(function (e) {
                var rect = e.currentTarget.getBoundingClientRect();
                dialogTitle = e.currentTarget.innerText;
                workoutId = e.currentTarget.getAttribute("data_workoutid");
                $("#dialog-1").dialog({
                    title: e.currentTarget.innerText,
                    position: {
                        my: "left top",
                        at: "right bottom",
                        of: "#" + e.currentTarget.id
                    }
                });
                $("#dialog-1").dialog("open");
                console.log("%O", e);
                e.preventDefault();
            });
            $("#delete").click(function (e) {
                $.post("CreateWorkout/DeleteWorkout",
                    { Name: dialogTitle, Id: workoutId },
                    function (data) {
                        if (data == "success") {
                            location.reload();
                        }
                });
            });
            $("#rename").click(function (e) {
                var newName = $("#newname")[0].value;
                $.post("CreateWorkout/RenameWorkout",
                    { Name: newName, Id: workoutId },
                    function (data) {
                    if (data == "success") {
                         location.reload();
                     }
                });
            });
            $(".addvalue").click(function (event) {
                var index = event.currentTarget.getAttribute("data_index");
                var newitem = $("#newOptionTxt" + index).val(); //get the new value

                var newInt = parseInt(newitem);
                var mod = newInt % poolLength
                if (mod > 1 && poolLength - mod > 1) {
                    alert("Not legit for pool size");
                    return;
                }

                var selectLists = document.getElementsByClassName("distselect");
                for (var i = 0; i < selectLists.length; i++) {
                    var newOption = window.document.createElement("OPTION");
                    newOption.text = newitem;
                    newOption.value = newitem;

                    for (var j = 0; j < selectLists[i].options.length; j++) {
                        if (newInt == parseInt(selectLists[i].options[j].value)) {
                            break;
                        }

                        if (parseInt(newOption.value) < parseInt(selectLists[i].options[j].value) ||
                            selectLists[i].options[j].text == "Other") {
                            selectLists[i].options.insertBefore(newOption, selectLists[i].options[j]);
                            break;
                        }
                    }
                }

                $("#div_content" + index).css("display", "none");
                var distId = "dist" + index;
                document.getElementById(distId).value = newOption.value;
                return false;
            });

            function UpdateYardage(poolSizeChanged) {
                var index = 0;
                if (poolSizeChanged) {
                    var stdSetLengths = [1, 2, 3, 4, 5, 6, 8, 12, 16, 20, 32, 40];
                    var selectLists = document.getElementsByClassName("distselect");
                    for (var i = 0; i < selectLists.length; i++) {
                        selectLists[i].options.length = 0;

                        stdSetLengths.forEach(function (lenghts) {
                            var newOption = window.document.createElement("OPTION");
                            var newItem = lenghts * poolLength;
                            newOption.text = Math.round(newItem).toString();
                            newOption.value = newItem.toString();
                            selectLists[i].options.add(newOption);
                        });

                        var newOption = window.document.createElement("OPTION");
                        newOption.text = "Other";
                        newOption.value = "Other";
                        selectLists[i].options.add(newOption);

                    };
                }

                index = 0;
                var total = 0;
                var totId = "tot" + index;
                var dist = document.getElementById(totId);
                do {
                    total += parseInt(dist.value, 10);
                    totId = "tot" + ++index;
                    dist = document.getElementById(totId);
                }
                while (dist != null)

                if (yards) {
                    document.getElementById("yardstotal").value = Math.round(total);
                    document.getElementById("meterstotal").value = Math.round(0.9144 * total);
                }
                else {
                    document.getElementById("meterstotal").value = Math.round(total);
                    document.getElementById("yardstotal").value = Math.round(1.0936 * total);
                }
            }

            function UpdateSet(i) {
                var repsId = "reps" + i;
                var distId = "dist" + i;
                var totId = "tot" + i;
                var repsCount = parseInt(document.getElementById(repsId).value);
                var dist = parseFloat(document.getElementById(distId).value);
                var tot = repsCount * dist;
                document.getElementById(totId).value = Math.round(tot);
            }
        });
    </script>
    <style>
        .ui-widget-header, .ui-state-default, ui-button {
            background: #2e65a8;
            border: 1px solid #b9cd6d;
            color: #FFFFFF;
            font-weight: bold;
        }
    </style>
}

<div id="dialog-1">
    <table>
        <tr>
            <td><button id="delete" class="btn btn-primary" style="margin:10px">Delete</button></td>
        </tr>
        <tr>
            <td><button id="rename" class="btn btn-primary" style="margin:10px">Rename</button></td>
            <td><input id="newname" type="text" style="width: 150px; margin:10px" /></td>
        </tr>
    </table>
</div>

@using (Html.BeginForm("Calculate", "CreateWorkout", FormMethod.Post))
{
    <table>
        <tr>
            <td style="padding-bottom: 70px;">
                <div style="padding: 20px 0px 0px 10px;">
                    <text class="medboldtext">Saved Workouts</text>
                </div>
                <div class="workoutsborder">
                    <table>
                        @for (var i = 0; i < Model.Workouts.Count; i++)
                        {
                            <tr>
                                <td>
                                    <text></text>
                                    <button type="submit"
                                            id=@("workout_" + i.ToString())
                                            class="btn btn-primary"
                                            style="margin-left:5px; margin-top:10px;"
                                            formaction="/CreateWorkout/LoadWorkout?id=@Model.Workouts[i].Id" ,
                                            title="@Model.Workouts[i].Description"
                                            data_workoutId="@Model.Workouts[i].Id">
                                        @Model.Workouts[i].Name
                                    </button>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </td>
            <td>
                <div>
                    <div style="margin-left:20px">
                        <div>
                            <text class="instructions">Pool Length</text>
                        </div>
                        <table>
                            <tr>
                                <td>
                                    <div class="poolsizeborder">
                                        <table>
                                            <tr>
                                                <td style="padding-right:10px;">
                                                    @Html.RadioButtonFor(m => m.PoolLength,
                                                                          "25 Yards",
                                                                          new { @class = "poollengthinput" })
                                                </td>
                                                <td style="padding-bottom:2px;">25 Yards</td>
                                            </tr>
                                            <tr>
                                                <td style="padding-right:10px;">
                                                    @Html.RadioButtonFor(m => m.PoolLength,
                                                                          "25 Meters",
                                                                          new { @class = "poollengthinput" })
                                                </td>
                                                <td style="padding-bottom:2px;">25 Meters</td>
                                            </tr>
                                            <tr>
                                                <td style="padding-right:10px;">
                                                    @Html.RadioButtonFor(m => m.PoolLength,
                                                                          "50 Meters",
                                                                          new { @class = "poollengthinput" })
                                                </td>
                                                <td style="padding-bottom:2px;">50 Meters</td>
                                            </tr>
                                            <tr>
                                                <td style="padding-right:10px;">
                                                    @Html.RadioButtonFor(m => m.PoolLength,
                                                                          "33.33 Yards",
                                                                          new { @class = "poollengthinput" })
                                                </td>
                                                <td style="padding-bottom:2px;">33.33 Yards</td>
                                            </tr>
                                        </table>
                                    </div>
                                </td>
                                <td>
                                    <div class="workoutdescborder">
                                        <table>
                                            <tr>
                                                <td class="medboldtext" style="margin-right:10px;">
                                                    Workout Name
                                                </td>
                                                <td class="medboldtext" style="margin-right:10px;">
                                                    Athlete Name
                                                </td>
                                                <td class="medboldtext" style="margin-right:10px;">
                                                    Coach Name
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    @Html.TextBoxFor(m => m.WorkoutName, new { @style = "margin-right:10px;" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.AthleteName, new { @style = "margin-right:10px;" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.CoachName, new { @style = "margin-right:10px; background-color: lightgray", @readonly = "true" })
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="medboldtext">
                                                    Description
                                                </td>
                                            </tr>
                                        </table>
                                        <table>
                                            <tr>
                                            <tr>
                                                <td>
                                                    @Html.TextAreaFor(m => m.WorkoutDescription, new
                                        {
                                            @class = "descbox",
                                            @TextMode = "MultiLine",
                                            @Columns = "50",
                                            @Rows = "5"
                                        })
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                        </table>

                        <div style="margin: 20px 0;">
                            <table>
                                <tr>
                                    <td class="totalmeterslabel">Total Yards</td>
                                    <td class="numentry">
                                        @Html.TextBoxFor(m => m.TotalYards, new
                            {
                                @type = "number",
                                @class = "readonlynumentry",
                                @id = "yardstotal",
                                @readonly = "true"
                            })
                                    </td>
                                    <td class="totalmeterslabel">Total Meters</td>
                                    <td class="numentry">
                                        @Html.TextBoxFor(m => m.TotalMeters, new
                            {
                                @type = "number",
                                @class = "readonlynumentry",
                                @id = "meterstotal",
                                @readonly = "true"
                            })
                                    </td>
                                </tr>
                            </table>
                        </div>

                        <div style="font-weight:bold; font-size:25px; width:200px;">Warm Up</div>
                        <div style="width:800px">
                            @await Html.PartialAsync("_AddSets", new ViewDataDictionary(this.ViewData) { {"begin", Model.WarmUpBeginSteps  },
                                                                  { "end", Model.WarmUpEndSteps } })
                        </div>
                        <div style="font-weight:bold; font-size:25px; width:200px;">Main Set</div>
                        <div style="width:800px">
                            @await Html.PartialAsync("_AddSets", new ViewDataDictionary(this.ViewData) { {"begin", Model.MainBeginSteps  },
                                                                  { "end", Model.MainEndSteps } })
                        </div>
                        <div style="font-weight:bold; font-size:25px; width:200px;">Cooldown</div>
                        <div style="width:800px">
                            @await Html.PartialAsync("_AddSets", new ViewDataDictionary(this.ViewData) { {"begin", Model.CoolDownBeginSteps  },
                                                                          { "end", Model.CoolDownEndSteps } })
                        </div>
                    </div>
                </div>

                <div id="swimout">
                    @Html.TextAreaFor(m => m.Calculated, new { @class = "swimoutput", @id = "swimouttext" })
                </div>
                @Html.HiddenFor(m => m.WarmUpBeginSteps)
                @Html.HiddenFor(m => m.WarmUpEndSteps)
                @Html.HiddenFor(m => m.MainBeginSteps)
                @Html.HiddenFor(m => m.MainEndSteps)
                @Html.HiddenFor(m => m.CoolDownBeginSteps)
                @Html.HiddenFor(m => m.CoolDownEndSteps)
                @Html.HiddenFor(m => m.WorkoutId)
                <button type="submit" class="btn btn-primary" style="margin-left:20px; margin-top:20px;">Calculate</button>
                <button type="submit" class="btn btn-primary" style="margin-left:20px; margin-top:20px;" formaction=@Url.Action("Save")>Save</button>
                <button id="print" class="btn btn-primary" style="margin-left:34px; margin-top:20px;">Print</button>
            </td>
        </tr>
    </table>
}